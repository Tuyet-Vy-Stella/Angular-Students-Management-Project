{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/subject/service/subject.service\";\nconst _c0 = [\"createInput\"];\nexport class SubjectListComponent {\n  //Focus Input\n  FocusInput() {\n    this.inputEl.nativeElement.focus();\n  }\n  constructor(SubjectService) {\n    this.SubjectService = SubjectService;\n    this.subjectList = [];\n    this.name = '';\n    this.id = 0;\n  }\n  ngOnInit() {\n    this.SubjectService.getListSubject().subscribe(res => {\n      this.subjectList = res;\n    });\n  }\n  handleCreate(name) {\n    this.SubjectService.createSubject(name).subscribe(res => {\n      this.subjectList = [...this.subjectList, res];\n    });\n  }\n  handleFilter(id) {\n    if (this.id === '') {\n      this.SubjectService.getListSubject().subscribe(res => {\n        this.subjectList = res;\n      });\n    }\n    this.SubjectService.getSubjectById(id).subscribe(res => {\n      this.subjectList = [res];\n    });\n  }\n  handleUpdate(name) {\n    this.SubjectService.setNameEdit(name);\n  }\n  onSelect(event) {\n    const selectedValue = event.target.value;\n    if (selectedValue === 'All') {\n      this.SubjectService.getListSubject().subscribe(res => {\n        this.subjectList = res;\n      });\n    }\n    // Do something when 5 is selected\n    if (selectedValue === '5') {\n      this.SubjectService.getListSubject().subscribe(res => {\n        this.subjectList = res.slice(0, 5);\n      });\n      // Do something when 10 is selected\n    } else if (selectedValue === '10') {\n      this.SubjectService.getListSubject().subscribe(res => {\n        this.subjectList = res.slice(0, 10);\n      });\n      // Do something else when 15 is selected\n    } else if (selectedValue === '15') {\n      this.SubjectService.getListSubject().subscribe(res => {\n        this.subjectList = res.slice(0, 15);\n      });\n    }\n  }\n}\nSubjectListComponent.ɵfac = function SubjectListComponent_Factory(t) {\n  return new (t || SubjectListComponent)(i0.ɵɵdirectiveInject(i1.SubjectService));\n};\nSubjectListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SubjectListComponent,\n  selectors: [[\"app-subject-list\"]],\n  viewQuery: function SubjectListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputEl = _t.first);\n    }\n  },\n  decls: 9,\n  vars: 0,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"http-equiv\", \"X-UA-Compatible\", \"content\", \"IE=edge\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"]],\n  template: function SubjectListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2)(4, \"meta\", 3);\n      i0.ɵɵelementStart(5, \"title\");\n      i0.ɵɵtext(6, \"Document\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"link\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"body\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,oBAAoB;EAM/B;EACAC,UAAU;IACR,IAAI,CAACC,OAAO,CAACC,aAAa,CAACC,KAAK,EAAE;EACpC;EAEAC,YAAoBC,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;IAVlC,gBAAW,GAAS,EAAE;IACtB,SAAI,GAAU,EAAE;IAChB,OAAE,GAAO,CAAC;EAQ0C;EAEpDC,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,cAAc,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;MACnD,IAAI,CAACC,WAAW,GAAGD,GAAG;IAExB,CAAC,CAAC;EACJ;EAEAE,YAAY,CAACC,IAAW;IACtB,IAAI,CAACP,cAAc,CAACQ,aAAa,CAACD,IAAI,CAAC,CAACJ,SAAS,CAACC,GAAG,IAAG;MACpD,IAAI,CAACC,WAAW,GAAG,CAAC,GAAG,IAAI,CAACA,WAAW,EAAED,GAAG,CAAC;IAEjD,CAAC,CAAC;EAGJ;EAEAK,YAAY,CAACC,EAAS;IACpB,IAAG,IAAI,CAACA,EAAE,KAAK,EAAE,EAAG;MAClB,IAAI,CAACV,cAAc,CAACE,cAAc,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;QACnD,IAAI,CAACC,WAAW,GAAGD,GAAG;MAGxB,CAAC,CAAC;;IAEJ,IAAI,CAACJ,cAAc,CAACW,cAAc,CAACD,EAAE,CAAC,CAACP,SAAS,CAACC,GAAG,IAAG;MACrD,IAAI,CAACC,WAAW,GAAG,CAACD,GAAG,CAAC;IAE1B,CAAC,CAAC;EACJ;EAEAQ,YAAY,CAACL,IAAW;IACpB,IAAI,CAACP,cAAc,CAACa,WAAW,CAACN,IAAI,CAAC;EACzC;EAEAO,QAAQ,CAACC,KAAU;IACjB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACxC,IAAGF,aAAa,KAAK,KAAK,EAAC;MACzB,IAAI,CAAChB,cAAc,CAACE,cAAc,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;QACpD,IAAI,CAACC,WAAW,GAAGD,GAAG;MAGvB,CAAC,CAAC;;IAGJ;IACA,IAAIY,aAAa,KAAK,GAAG,EAAE;MACzB,IAAI,CAAChB,cAAc,CAACE,cAAc,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;QACpD,IAAI,CAACC,WAAW,GAAGD,GAAG,CAACe,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC;MAGlC,CAAC,CAAC;MAGJ;KACC,MAAM,IAAIH,aAAa,KAAK,IAAI,EAAE;MACjC,IAAI,CAAChB,cAAc,CAACE,cAAc,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;QACpD,IAAI,CAACC,WAAW,GAAGD,GAAG,CAACe,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;MAGnC,CAAC,CAAC;MACF;KACD,MAAM,IAAIH,aAAa,KAAK,IAAI,EAAE;MACjC,IAAI,CAAChB,cAAc,CAACE,cAAc,EAAE,CAACC,SAAS,CAACC,GAAG,IAAG;QACpD,IAAI,CAACC,WAAW,GAAGD,GAAG,CAACe,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC;MAGnC,CAAC,CAAC;;EAGN;;AAlFWzB,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA0B;EAAAC;IAAA;;;;;;;;;;;;;MCPjCC,+BAAgB;MAEZA,0BAAwB;MAGxBA,6BAAO;MAAAA,wBAAQ;MAAAA,iBAAQ;MACvBA,0BAGE;MACJA,iBAAO;MAEPA,uBAEO;MACTA,iBAAO","names":["SubjectListComponent","FocusInput","inputEl","nativeElement","focus","constructor","SubjectService","ngOnInit","getListSubject","subscribe","res","subjectList","handleCreate","name","createSubject","handleFilter","id","getSubjectById","handleUpdate","setNameEdit","onSelect","event","selectedValue","target","value","slice","selectors","viewQuery","i0"],"sourceRoot":"","sources":["C:\\OneDrive - Industrial University of HoChiMinh City\\Desktop\\Angular-Students-Management-Project\\src\\app\\subject\\subject-list\\subject-list.component.ts","C:\\OneDrive - Industrial University of HoChiMinh City\\Desktop\\Angular-Students-Management-Project\\src\\app\\subject\\subject-list\\subject-list.component.html"],"sourcesContent":["import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\r\nimport { SubjectService } from 'src/app/subject/service/subject.service';\r\n\r\n@Component({\r\n  selector: 'app-subject-list',\r\n  templateUrl: './subject-list.component.html',\r\n  styleUrls: ['./subject-list.component.scss']\r\n})\r\nexport class SubjectListComponent implements OnInit {\r\n  subjectList:any[] = [];\r\n  name:string = '';\r\n  id:any = 0;\r\n  @ViewChild('createInput') inputEl!: ElementRef;\r\n\r\n  //Focus Input\r\n  FocusInput(){\r\n    this.inputEl.nativeElement.focus();\r\n  }\r\n  \r\n  constructor(private SubjectService: SubjectService){}\r\n\r\n  ngOnInit() {\r\n    this.SubjectService.getListSubject().subscribe(res => {\r\n      this.subjectList = res;\r\n      \r\n    })\r\n  }\r\n\r\n  handleCreate(name:string){\r\n    this.SubjectService.createSubject(name).subscribe(res => {\r\n        this.subjectList = [...this.subjectList, res];\r\n        \r\n    })\r\n\r\n\r\n  }\r\n\r\n  handleFilter(id:number){\r\n    if(this.id === '' ) {\r\n      this.SubjectService.getListSubject().subscribe(res => {\r\n        this.subjectList = res;\r\n        \r\n        \r\n      }) \r\n    }\r\n    this.SubjectService.getSubjectById(id).subscribe(res => {\r\n      this.subjectList = [res];\r\n      \r\n    })\r\n  }\r\n\r\n  handleUpdate(name:string){\r\n      this.SubjectService.setNameEdit(name);\r\n  }\r\n\r\n  onSelect(event: any) {\r\n    const selectedValue = event.target.value;\r\n    if(selectedValue === 'All'){\r\n      this.SubjectService.getListSubject().subscribe(res => {\r\n       this.subjectList = res\r\n       \r\n        \r\n      })\r\n    }\r\n\r\n    // Do something when 5 is selected\r\n    if (selectedValue === '5') {\r\n      this.SubjectService.getListSubject().subscribe(res => {\r\n       this.subjectList = res.slice(0,5)\r\n       \r\n        \r\n      })\r\n      \r\n\r\n    // Do something when 10 is selected\r\n    } else if (selectedValue === '10') {\r\n      this.SubjectService.getListSubject().subscribe(res => {\r\n       this.subjectList = res.slice(0,10)\r\n       \r\n        \r\n      })      \r\n      // Do something else when 15 is selected\r\n    } else if (selectedValue === '15') {\r\n      this.SubjectService.getListSubject().subscribe(res => {\r\n       this.subjectList = res.slice(0,15)\r\n       \r\n        \r\n      })      \r\n   \r\n  }\r\n  }\r\n\r\n \r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Document</title>\r\n    <link\r\n      rel=\"stylesheet\"\r\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n    />\r\n  </head>\r\n\r\n  <body>\r\n   \r\n  </body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}