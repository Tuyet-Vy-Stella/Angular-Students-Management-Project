{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nlet SubjectListComponent = class SubjectListComponent {\n  //Focus Input\n  FocusInput() {\n    this.inputEl.nativeElement.focus();\n  }\n  constructor(SubjectService, title) {\n    this.SubjectService = SubjectService;\n    this.title = title;\n    this.subjectList = [];\n    this.name = '';\n    this.nameSearchText = '';\n    this.id = '';\n  }\n  ngOnInit() {\n    this.title.setTitle('Subject List');\n    this.SubjectService.getListSubject().subscribe(res => {\n      this.subjectList = res;\n    });\n  }\n  /* Handle Create */\n  handleCreate(name) {\n    if (name == '') {\n      alert('Please fill out input value.');\n    } else {\n      this.SubjectService.createSubject(name).subscribe(res => {\n        this.subjectList = [...this.subjectList, res];\n      });\n    }\n  }\n  /* Filter by Id */\n  handleFilter(id) {\n    if (this.id === '') {\n      this.SubjectService.getListSubject().subscribe(res => {\n        this.subjectList = res;\n      });\n    } else {\n      this.SubjectService.getSubjectById(id).subscribe(res => {\n        this.subjectList = [res];\n      });\n    }\n  }\n  /* Filter by Name */\n  handleFilterByName(name) {\n    if (name !== '' && this.id !== '') {\n      this.SubjectService.getListSubject().subscribe(res => {\n        this.subjectList = res.filter(s => {\n          return s.name.toLowerCase().includes(name.toLowerCase()) && s.id == this.id;\n        });\n      });\n    } else {\n      this.SubjectService.getListSubject().subscribe(res => {\n        this.subjectList = res.filter(s => {\n          return s.name.toLowerCase().includes(name.toLowerCase());\n        });\n      });\n    }\n  }\n  handleUpdate(name) {\n    this.SubjectService.setNameEdit(name);\n  }\n  /* Handle Search */\n  handleSearch() {\n    this.SubjectService.getListSubject().subscribe(res => {\n      this.subjectList = res.filter(sub => sub.id === this.id && sub.name.toLowerCase().includes(this.name.toLocaleLowerCase()));\n    });\n  }\n  /* Handle Search */\n  onSelect(event) {\n    const selectedValue = event.target.value;\n    if (selectedValue === 'All') {\n      this.SubjectService.getListSubject().subscribe(res => {\n        this.subjectList = res;\n      });\n    } else {\n      this.SubjectService.getListSubject().subscribe(res => {\n        this.subjectList = res.slice(0, +selectedValue);\n      });\n    }\n  }\n};\n__decorate([ViewChild('createInput')], SubjectListComponent.prototype, \"inputEl\", void 0);\nSubjectListComponent = __decorate([Component({\n  selector: 'app-subject-list',\n  templateUrl: './subject-list.component.html',\n  styleUrls: ['./subject-list.component.scss']\n})], SubjectListComponent);\nexport { SubjectListComponent };","map":{"version":3,"mappings":"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","names":["Component","ViewChild","SubjectListComponent","FocusInput","inputEl","nativeElement","focus","constructor","SubjectService","title","ngOnInit","setTitle","getListSubject","subscribe","res","subjectList","handleCreate","name","alert","createSubject","handleFilter","id","getSubjectById","handleFilterByName","filter","s","toLowerCase","includes","handleUpdate","setNameEdit","handleSearch","sub","toLocaleLowerCase","onSelect","event","selectedValue","target","value","slice","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\OneDrive - Industrial University of HoChiMinh City\\Desktop\\Angular-Students-Management-Project\\src\\app\\subject\\subject-list\\subject-list.component.ts"],"sourcesContent":["import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { SubjectService } from 'src/app/subject/service/subject.service';\r\n\r\n@Component({\r\n  selector: 'app-subject-list',\r\n  templateUrl: './subject-list.component.html',\r\n  styleUrls: ['./subject-list.component.scss']\r\n})\r\nexport class SubjectListComponent implements OnInit {\r\n  subjectList: any[] = [];\r\n  name: string = '';\r\n  nameSearchText: string = '';\r\n  id: any = '';\r\n  @ViewChild('createInput') inputEl!: ElementRef;\r\n\r\n  //Focus Input\r\n  FocusInput() {\r\n    this.inputEl.nativeElement.focus();\r\n  }\r\n\r\n  constructor(private SubjectService: SubjectService, private title: Title) { }\r\n\r\n  ngOnInit() {\r\n    this.title.setTitle('Subject List')\r\n    this.SubjectService.getListSubject().subscribe(res => {\r\n      this.subjectList = res;\r\n    })\r\n  }\r\n\r\n  /* Handle Create */\r\n  handleCreate(name: string) {\r\n    if (name == '') {\r\n      alert('Please fill out input value.');\r\n    } else {\r\n      this.SubjectService.createSubject(name).subscribe(res => {\r\n        this.subjectList = [...this.subjectList, res];\r\n\r\n      })\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /* Filter by Id */\r\n  handleFilter(id: number) {\r\n    if (this.id === '') {\r\n      this.SubjectService.getListSubject().subscribe(res => {\r\n        this.subjectList = res;\r\n      })\r\n\r\n\r\n    }\r\n    else {\r\n\r\n      this.SubjectService.getSubjectById(id).subscribe(res => {\r\n        this.subjectList = [res];\r\n\r\n      })\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  /* Filter by Name */\r\n  handleFilterByName(name: string) {\r\n    if (name !== '' && this.id !== '') {\r\n      this.SubjectService.getListSubject().subscribe(res => {\r\n        this.subjectList = res.filter((s: any) => {\r\n          return s.name.toLowerCase().includes(name.toLowerCase()) && s.id == this.id\r\n        })\r\n\r\n      })\r\n    } else {\r\n\r\n      this.SubjectService.getListSubject().subscribe(res => {\r\n        this.subjectList = res.filter((s: any) => {\r\n          return s.name.toLowerCase().includes(name.toLowerCase())\r\n        })\r\n\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  handleUpdate(name: string) {\r\n    this.SubjectService.setNameEdit(name);\r\n  }\r\n\r\n  /* Handle Search */\r\n  handleSearch(){\r\n    this.SubjectService.getListSubject().subscribe(res => {\r\n      this.subjectList = res.filter((sub:any) => sub.id === this.id && sub.name.toLowerCase().includes(this.name.toLocaleLowerCase()))\r\n    })\r\n  }\r\n\r\n\r\n\r\n  /* Handle Search */\r\n\r\n  onSelect(event: any) {\r\n    const selectedValue = event.target.value;\r\n    if (selectedValue === 'All') {\r\n      this.SubjectService.getListSubject().subscribe(res => {\r\n        this.subjectList = res;\r\n\r\n\r\n      })\r\n    } else {\r\n      this.SubjectService.getListSubject().subscribe(res => {\r\n        this.subjectList = res.slice(0, +selectedValue);\r\n\r\n\r\n      })\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}